#!/usr/bin/env python3
#-----------------------------------------------------------------------------
# This file is part of the 'Development Board Examples'. It is subject to
# the license terms in the LICENSE.txt file found in the top-level directory
# of this distribution and at:
#    https://confluence.slac.stanford.edu/display/ppareg/LICENSE.html.
# No part of the 'Development Board Examples', including this file, may be
# copied, modified, propagated, or distributed except according to the terms
# contained in the LICENSE.txt file.
#-----------------------------------------------------------------------------
import os
import sys
import argparse
import importlib
import rogue

if __name__ == "__main__":

#################################################################

    # Convert str to bool
    argBool = lambda s: s.lower() in ['true', 't', 'yes', '1']

    # Set the argument parser
    parser = argparse.ArgumentParser()

    # Add arguments
    parser.add_argument(
        "--dev",
        type     = str,
        required = False,
        default  = '/dev/datadev_0',
        help     = "path to device",
    )

    parser.add_argument(
        "--pollEn",
        type     = argBool,
        required = False,
        default  = True,
        help     = "Enable auto-polling",
    )

    parser.add_argument(
        "--initRead",
        type     = argBool,
        required = False,
        default  = True,
        help     = "Enable read all variables at start",
    )

    parser.add_argument(
        "--epicsBase",
        type     = str,
        required = False,
        default  = None,
        help     = "Optional epics base to enable epics V4",
    )

    # Get the arguments
    args = parser.parse_args()

    #################################################################

    # First see if submodule packages are already in the python path
    try:
        # Load the packages
        import SmurfPcie.SmurfKcu1500RssiOffload10GbE as smurf

        print( 'Running anaconda software' )

    # Otherwise assume it is relative in a standard development directory structure
    except:
        # Load the packages
        import setupLibPaths
        import SmurfPcie.SmurfKcu1500RssiOffload10GbE as smurf

        print( 'Running local git clone software' )

    #################################################################
    import pyrogue.pydm

    with smurf.Root(
        name      = 'pcie', # Legacy name
        dev       = args.dev,
        pollEn    = args.pollEn,
        initRead  = args.initRead,
        epicsBase = args.epicsBase
    ) as root:
        pyrogue.pydm.runPyDM(
            serverList = root.zmqServer.address,
            sizeX      = 800,
            sizeY      = 800,
        )

    #################################################################
